{"ast":null,"code":"import React,{useState,useCallback}from'react';import{useDropzone}from'react-dropzone';import axios from'axios';import{saveAs}from'file-saver';import LoadingSpinner from'./LoadingSpinner';import FileInfo from'./FileInfo';import uploadIcon from'../uploadIcon.svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiUrl=process.env.REACT_APP_API_URL;const websocketUrl=process.env.REACT_APP_WEBSOCKET_URL;const DragAndDropUpload=()=>{const[tags,setTags]=useState([{text:'test1',category:'testcategory1'},{text:'test2',category:'testcategory2'}]);const[transcript,setTranscript]=useState('');const[isUploading,setIsUploading]=useState(false);const[uploadProgress,setUploadProgress]=useState(0);const[fileInfo,setFileInfo]=useState(null);const[ws,setWs]=useState(null);const[error,setError]=useState(null);const onDrop=useCallback((acceptedFiles,rejectedFiles)=>{if(rejectedFiles.length>0){const errorCode=rejectedFiles[0].errors[0].code;let errorMsg;if(errorCode==='file-too-large'){errorMsg=\"The file is too large. Please upload a video file smaller than 25MB.\";}else if(errorCode==='file-invalid-type'){errorMsg=\"Invalid file type. Please upload a valid video file.\";}else{errorMsg=\"Error: \".concat(rejectedFiles[0].errors[0].message);}setError(errorMsg);return;}const file=acceptedFiles[0];setFileInfo({name:file.name,size:(file.size/1024/1024).toFixed(2)});const formData=new FormData();formData.append('video',file);setIsUploading(true);setError(null);axios.post(\"\".concat(apiUrl,\"/api/upload\"),formData,{headers:{'Content-Type':'multipart/form-data'}}).then(response=>{const ws=new WebSocket(\"\".concat(websocketUrl));setWs(ws);ws.onopen=()=>{ws.send(JSON.stringify({action:'process',filePath:response.data.filePath}));};ws.onmessage=event=>{const data=JSON.parse(event.data);if(data.progress){setUploadProgress(data.progress);}if(data.transcript&&data.tags){setTranscript(data.transcript);setTags(data.tags);setIsUploading(false);}if(data.error){console.error(data.error);setIsUploading(false);}};ws.onclose=()=>{setWs(null);};}).catch(error=>{console.error('Error uploading the file:',error);setIsUploading(false);});},[]);const{getRootProps,getInputProps,isDragActive,open}=useDropzone({onDrop,noClick:true,noKeyboard:true,disabled:isUploading,accept:{'video/*':[]},maxFiles:1,maxSize:25*1024*1024});const getHighlightedText=(text,tags)=>{if(!tags.length)return/*#__PURE__*/_jsx(\"span\",{children:text});const sortedTags=tags.sort((a,b)=>b.text.length-a.text.length);let parts=[text];sortedTags.forEach(tag=>{const newParts=[];parts.forEach(part=>{if(typeof part==='string'){const regex=new RegExp(\"(\".concat(tag.text,\")\"),'gi');const splitParts=part.split(regex);splitParts.forEach((splitPart,index)=>{if(regex.test(splitPart)){newParts.push(/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col flex-wrap\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-1 bg-indigo-50\",children:splitPart}),/*#__PURE__*/_jsx(\"span\",{className:\"hidden text-xs uppercase\",children:tag.category})]},\"\".concat(splitPart,\"-\").concat(index)));}else{newParts.push(splitPart);}});}else{newParts.push(part);}});parts=newParts;});return parts;};const formatTagsForCSV=(tags,fileName)=>{const tagMap=tags.reduce((acc,tag)=>{if(!acc[tag.category]){acc[tag.category]=[];}acc[tag.category].push(tag.text);return acc;},{});const categories=Object.keys(tagMap);const csvRows=['Filename,'+categories.join(',')];const row=[fileName];categories.forEach(category=>{row.push(\"\\\"\".concat(tagMap[category].join('|'),\"\\\"\"));});csvRows.push(row.join(','));return csvRows.join('\\n');};const downloadCSV=()=>{const csvData=formatTagsForCSV(tags,fileInfo.name);const blob=new Blob([csvData],{type:'text/csv;charset=utf-8;'});saveAs(blob,'tags.csv');};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center max-w-screen-md px-10 py-6 mx-auto md:border-gray-200 md:border md:border-solid md:rounded-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"self-start mb-1 text-xl font-bold\",children:\"Upload your Video\"}),/*#__PURE__*/_jsx(\"p\",{className:\"self-start mb-6 text-sm font-semibold text-gray-600\",children:\"Upload a video to generate metadata keywords based on its transcript.\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-emerald-500\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center bg-gray-50 border-gray-400 border-2 rounded-md p-10 mb-6 w-full min-h-60 transition-colors duration-300 \".concat(isDragActive?'bg-indigo-100/50 border-indigo-400 border-solid':'border-gray-400 border-dashed',\" \").concat(isUploading?'opacity-50 cursor-not-allowed':''),...getRootProps(),children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps(),disabled:isUploading}),isUploading?/*#__PURE__*/_jsx(LoadingSpinner,{}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-12 p-2 mb-4 bg-indigo-500 rounded-md\",children:/*#__PURE__*/_jsx(\"img\",{src:uploadIcon,alt:\"A white upload icon - a white arrow pointing up\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"font-bold text-lg text-center\",children:\"\".concat(isDragActive?'Drop to upload your file':'Drag a video file here to upload it')}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Maximum file size 25MB\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"font-semibold text-indigo-600 hover:cursor-pointer transition-transform transform \".concat(isDragActive?'scale-0':'scale-100'),onClick:open,children:\"Or choose your file\"})]})]}),fileInfo&&/*#__PURE__*/_jsx(FileInfo,{fileInfo:fileInfo,uploadProgress:uploadProgress}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-px bg-gray-200\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col mb-6 md:flex-row md:justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mt-6 mb-1 text-sm font-bold uppercase\",children:\"Keywords:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"flex flex-wrap mb-6\",children:tags.map((tag,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col px-3 py-2 mt-2 mr-2 rounded-md bg-indigo-50\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-normal text-indigo-600 uppercase\",children:tag.category}),/*#__PURE__*/_jsx(\"li\",{className:\"inline-block font-semibold\",children:tag.text})]},index))})]}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadCSV,className:\"px-4 py-2 text-white bg-indigo-600 rounded-md w-fit md:self-center\",children:\"Download CSV\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-px bg-gray-200\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-6 mb-1 text-sm font-bold uppercase\",children:\"Transcript:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1 mb-6 whitespace-pre-wrap text-sm/8\",children:getHighlightedText(transcript,tags)})]})]});};export default DragAndDropUpload;","map":{"version":3,"names":["React","useState","useCallback","useDropzone","axios","saveAs","LoadingSpinner","FileInfo","uploadIcon","jsx","_jsx","jsxs","_jsxs","apiUrl","process","env","REACT_APP_API_URL","websocketUrl","REACT_APP_WEBSOCKET_URL","DragAndDropUpload","tags","setTags","text","category","transcript","setTranscript","isUploading","setIsUploading","uploadProgress","setUploadProgress","fileInfo","setFileInfo","ws","setWs","error","setError","onDrop","acceptedFiles","rejectedFiles","length","errorCode","errors","code","errorMsg","concat","message","file","name","size","toFixed","formData","FormData","append","post","headers","then","response","WebSocket","onopen","send","JSON","stringify","action","filePath","data","onmessage","event","parse","progress","console","onclose","catch","getRootProps","getInputProps","isDragActive","open","noClick","noKeyboard","disabled","accept","maxFiles","maxSize","getHighlightedText","children","sortedTags","sort","a","b","parts","forEach","tag","newParts","part","regex","RegExp","splitParts","split","splitPart","index","test","push","className","formatTagsForCSV","fileName","tagMap","reduce","acc","categories","Object","keys","csvRows","join","row","downloadCSV","csvData","blob","Blob","type","src","alt","onClick","map"],"sources":["/Users/brittanycallahan/Documents/Projects/video-metadata-generator/frontend/src/components/DragAndDropUpload.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport LoadingSpinner from './LoadingSpinner';\nimport FileInfo from './FileInfo';\nimport uploadIcon from '../uploadIcon.svg';\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst websocketUrl = process.env.REACT_APP_WEBSOCKET_URL;\n\nconst DragAndDropUpload = () => {\n  const [tags, setTags] = useState([{ text: 'test1', category: 'testcategory1'}, { text: 'test2', category: 'testcategory2'}]);\n  const [transcript, setTranscript] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [ws, setWs] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    if (rejectedFiles.length > 0) {\n      const errorCode = rejectedFiles[0].errors[0].code;\n      let errorMsg;\n      if (errorCode === 'file-too-large') {\n        errorMsg = \"The file is too large. Please upload a video file smaller than 25MB.\";\n      } else if (errorCode === 'file-invalid-type') {\n        errorMsg = \"Invalid file type. Please upload a valid video file.\";\n      } else {\n        errorMsg = `Error: ${rejectedFiles[0].errors[0].message}`;\n      }\n      setError(errorMsg);\n      return;\n    }\n\n    const file = acceptedFiles[0];\n    setFileInfo({\n      name: file.name,\n      size: (file.size / 1024 / 1024).toFixed(2),\n    })\n\n    const formData = new FormData();\n    formData.append('video', file);\n\n    setIsUploading(true);\n    setError(null);\n\n    axios.post(`${apiUrl}/api/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    .then(response => {\n      const ws = new WebSocket(`${websocketUrl}`);\n      setWs(ws);\n\n      ws.onopen = () => {\n        ws.send(JSON.stringify({ action: 'process', filePath: response.data.filePath }));\n      }\n\n      ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.progress) {\n          setUploadProgress(data.progress);\n        }\n        if (data.transcript && data.tags) {\n          setTranscript(data.transcript);\n          setTags(data.tags);\n          setIsUploading(false);\n        }\n        if (data.error) {\n          console.error(data.error);\n          setIsUploading(false);\n        }\n      }\n\n      ws.onclose = () => {\n        setWs(null);\n      }\n    })\n    .catch(error => {\n      console.error('Error uploading the file:', error);\n      setIsUploading(false);\n    })\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({ \n    onDrop,\n    noClick: true, \n    noKeyboard: true,\n    disabled: isUploading,\n    accept: {'video/*': []},\n    maxFiles: 1,\n    maxSize: 25 * 1024 * 1024\n  });\n\n  const getHighlightedText = (text, tags) => {\n    if (!tags.length) return <span>{text}</span>;\n\n    const sortedTags = tags.sort((a, b) => b.text.length - a.text.length);\n    let parts = [text];\n\n    sortedTags.forEach(tag => {\n      const newParts = [];\n      parts.forEach(part => {\n        if (typeof part === 'string') {\n          const regex = new RegExp(`(${tag.text})`, 'gi');\n          const splitParts = part.split(regex);\n          splitParts.forEach((splitPart, index) => {\n            if (regex.test(splitPart)) {\n              newParts.push(<div className='flex flex-col flex-wrap' key={`${splitPart}-${index}`}><span className='px-1 bg-indigo-50'>{splitPart}</span><span className='hidden text-xs uppercase'>{tag.category}</span></div>);\n            } else {\n              newParts.push(splitPart);\n            }\n          });\n        } else {\n          newParts.push(part);\n        }\n      });\n      parts = newParts;\n    });\n\n    return parts;\n  };\n\n  const formatTagsForCSV = (tags, fileName) => {\n    const tagMap = tags.reduce((acc, tag) => {\n      if (!acc[tag.category]) {\n        acc[tag.category] = [];\n      }\n      acc[tag.category].push(tag.text);\n      return acc;\n    }, {});\n\n    const categories = Object.keys(tagMap);\n    const csvRows = ['Filename,' + categories.join(',')];\n    const row = [fileName];\n\n    categories.forEach(category => {\n      row.push(`\"${tagMap[category].join('|')}\"`);\n    });\n\n    csvRows.push(row.join(','));\n    return csvRows.join('\\n');\n  };\n\n  const downloadCSV = () => {\n    const csvData = formatTagsForCSV(tags, fileInfo.name);\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    saveAs(blob, 'tags.csv');\n  };\n\n  return (\n    <div className='flex flex-col items-center max-w-screen-md px-10 py-6 mx-auto md:border-gray-200 md:border md:border-solid md:rounded-md'>\n      <h2 className='self-start mb-1 text-xl font-bold'>Upload your Video</h2>\n      <p className='self-start mb-6 text-sm font-semibold text-gray-600'>Upload a video to generate metadata keywords based on its transcript.</p>\n      {error && <p className=\"text-emerald-500\">{error}</p>}\n      <div \n        className={`flex flex-col items-center justify-center bg-gray-50 border-gray-400 border-2 rounded-md p-10 mb-6 w-full min-h-60 transition-colors duration-300 ${isDragActive ? 'bg-indigo-100/50 border-indigo-400 border-solid' : 'border-gray-400 border-dashed'} ${isUploading ? 'opacity-50 cursor-not-allowed' : ''}`} \n        {...getRootProps()}\n      >\n        <input {...getInputProps()} disabled={isUploading} />\n        {\n          isUploading ? (\n            <LoadingSpinner/>\n          ) : (\n            <div className='flex flex-col items-center'>\n              <div className='w-12 p-2 mb-4 bg-indigo-500 rounded-md'>\n                <img src={uploadIcon} alt=\"A white upload icon - a white arrow pointing up\" />\n              </div>\n              <p className={`font-bold text-lg text-center`}>\n                {`${isDragActive ? 'Drop to upload your file' : 'Drag a video file here to upload it'}`}\n              </p>\n              <p className='text-sm text-gray-600'>Maximum file size 25MB</p>\n              <button type='button'className={`font-semibold text-indigo-600 hover:cursor-pointer transition-transform transform ${isDragActive ? 'scale-0' : 'scale-100'}`} onClick={open}>Or choose your file</button>\n            </div>\n          )\n        }\n      </div>\n      {fileInfo && <FileInfo fileInfo={fileInfo} uploadProgress={uploadProgress} />}\n      <div className='flex flex-col w-full'>\n        <div className='w-full h-px bg-gray-200'></div>\n        <div className='flex flex-col mb-6 md:flex-row md:justify-between'>\n          <div className='flex flex-col'>\n            <h3 className='mt-6 mb-1 text-sm font-bold uppercase'>Keywords:</h3>\n            <ul className='flex flex-wrap mb-6'>\n              {tags.map((tag, index) => (\n                <div key={index} className='flex flex-col px-3 py-2 mt-2 mr-2 rounded-md bg-indigo-50'>\n                  <span className='text-xs font-normal text-indigo-600 uppercase'>{tag.category}</span>\n                  <li className='inline-block font-semibold'>{tag.text}</li>\n                </div>\n              ))}\n            </ul>\n          </div>\n          <button onClick={downloadCSV} className='px-4 py-2 text-white bg-indigo-600 rounded-md w-fit md:self-center'>Download CSV</button>\n        </div>\n        <div className='w-full h-px bg-gray-200'></div>\n        <h3 className='mt-6 mb-1 text-sm font-bold uppercase'>Transcript:</h3>\n        <div className='flex gap-1 mb-6 whitespace-pre-wrap text-sm/8'>{getHighlightedText(transcript, tags)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default DragAndDropUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}